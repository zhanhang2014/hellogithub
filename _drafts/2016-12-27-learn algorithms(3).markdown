---
layout:     post
title:      "算法学习笔记(3) 递归"
subtitle:   "Hello World"
date:       2016-12-27 03:35:00
author:     "Hang"
header-img: "img//2016-06-03/head-bg.jpg"
catalog: true
tags:
    - 技术
---

递归是一种强大的方法，它允许一个对象以其自身更小的形式来定义自己。从很多方面来说递归算法都是简洁而优美的，而且非常强大。

## 基本递归

递归过程有两个基本阶段：递推与回归

在递推阶段，每一个递归调用通过进一步调用自己来记住这次递归过程。当其中有调用满足终止条件时，递推结束。一旦递推阶段结束，处理过程就进入回归阶段，在这之前的函数调用以逆序的方式回归，直到最初调用的函数返回为止，此时递归过程结束。

以递归的方式计算阶乘的函数：

```
int fact(int n){
	if(n<0)
		return 0;
	else if(n==0)
		return 1;
	else
		return n*fact(n-1);
}
```
如果n小于0，该函数返回0，代表一个错误。如果n等于0，该函数返回1，递归终止。否则，函数返回n乘以n-1的阶乘。而n-1的阶乘又会以递归的方式再次调用fact来计算。

在C语言中通常一个可执行程序由4个区域组成：代码段、静态数据区、堆与栈。代码段包含程序运行时所执行的机器指令。静态数据区包含在程序生命周期内一直保持的数据，比如全局变量和静态局部变量。堆包含程序运行时动态分配的存储空间，比如malloc分配的内存。栈包含函数调用的信息。

当C程序中调用一个函数时，栈中会分配一块空间来保存与这个调用相关的信息。每一个调用都被当做是活跃的。栈上的那块存储空间被称为活跃记录，或者称为栈帧。栈帧由


## 尾递归