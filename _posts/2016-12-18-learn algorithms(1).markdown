---
layout:     post
title:      "算法学习笔记(1) 概述"
subtitle:   "Start point of Hello World"
date:       2016-12-19 07:40:00
author:     "Hang"
header-img: "img//2016-06-03/head-bg.jpg"
catalog: true
tags:
    - 技术
---
## 写在前面

十二月十日参加了一次PAT考试，准备了一个多月，结果不是特别满意。“那么在下次考试前，除了刷题之外也系统的学习一下算法和数据结构吧”。这个就是我开始写这些博客的动机了。我是能在编程中找到乐趣的，也有一点点自以为的诀窍。我还欠缺的是一份纯粹和专注。

## 数据结构

在计算机科学领域中，常用的数据结构有：链表、栈、队列、集合、哈希表、树、堆、优先级队列和图。使用数据结构的三个原因是：效率、抽象和重用性。

## 算法

算法是定义良好的用来解决问题的步骤。

### 算法设计的一般方法

#### 随机法

随机法依赖于随机数的统计特性。一个运用随机法的例子：快速排序。随机数的正太分布使得快速排序划分的结果是相对平衡的。

#### 分治法

分治法包含三个步骤：分解、求解与合并。在分解阶段，将数据分解为更小、更容易管理的部分。在求解阶段，对每个分解出的部分进行处理。在合并阶段，将每部分处理的结果进行合并。

#### 动态规划

动态规划同分治法类似，都是将较大的问题分解为子问题最后再将结果合并。然而，它们处理问题的方式与子问题之间的关系有关。在分治法中，每一个子问题都是独立的。为此，我们以递归的方式解决每一个子问题，然后将结果和其他子问题的结果合并。在动态规划中，子问题之间并不是独立的，而有可能有关联。这类问题采用动态规划法比分治法更合适。

#### 贪心算法

贪心算法在求解问题时总能够做出在当前的最佳选择。换句话说，不是从整体最优上考虑，而仅仅是在某种意义上的局部最优解。当前的最优解未必是全局最优的，所以贪心算法并不一定能产生最优结果。

#### 近似法

近似法并不是计算出最优解，它只计算出“足够好”的解。通常利用近似法解决那些计算成本很高又因为其本身十分有价值而不愿放弃的问题。

## 软件工程

## 小目标

